========================================
OPTION: --workflows (-w)
========================================
Show complete workflow examples

COMMON WORKFLOWS
================

1. COMPONENT DISCOVERY
   {{BIN_NAME}} -m 'methods'                    # List all commands
   {{BIN_NAME}} -m 'list'                       # List component types
   {{BIN_NAME}} -m 'query Transform Name'       # Find entities

2. ENTITY INSPECTION
   {{BIN_NAME}} -m 'query Transform'            # Find entities
   {{BIN_NAME}} -m 'get 12345 Transform'        # Get component data
   {{BIN_NAME}} -m 'list_entity 12345'          # List all components

3. VISUAL DEBUGGING
   {{BIN_NAME}} -m 'ready,screenshot before.png,wait:1'
   {{BIN_NAME}} -m 'mutate_component 12345 Transform {"translation": [10, 0, 0]}'
   {{BIN_NAME}} -m 'wait:1,screenshot after.png'

4. ENTITY MANIPULATION
   {{BIN_NAME}} -m 'spawn {"Transform": {...}, "Name": "Test"}'
   {{BIN_NAME}} -m 'reparent 98765 12345'      # Set parent
   {{BIN_NAME}} -m 'destroy 98765'             # Remove entity

5. LIVE MONITORING (detached mode)
   {{BIN_NAME}} -d                             # Start session
   {{BIN_NAME}} get+watch 12345 Transform      # Watch changes
   {{BIN_NAME}} list+watch                     # Watch components

6. AUTOMATED TESTING
   #!/bin/bash
   {{BIN_NAME}} -m 'ready,spawn {...},wait:1,screenshot test.png'
   # Extract entity ID, modify, compare screenshots

KEY TIPS
========
• Use fully qualified component names from 'list' output
• Add wait:N after screenshots for async operations
• Chain commands with commas: 'cmd1,cmd2,cmd3'
• Use heredocs for complex JSON without escaping

ERROR HANDLING
==============
• Verify entities exist before modifying
• Check command output with jq
• Use --managed-commands for better error reporting

See also:
  --help-for <command>, --managed-commands, --detached