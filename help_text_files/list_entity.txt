========================================
COMMAND: list_entity (brp_tool/list_entity)
========================================

DESCRIPTION:
Get all component data for a single entity

USAGE:
  {{BIN_NAME}} list_entity <ENTITY_ID>
  {{BIN_NAME}} --managed --commands 'list_entity <ENTITY_ID>'

ARGUMENTS:
  ENTITY_ID - Entity ID to get all component data for (u64 integer)

RETURNS:
JSON object with all component data for the specified entity

EXAMPLE OUTPUT:
{
  "entity": 4294967355,
  "generation": 1,
  "components": {
    "bevy_transform::components::transform::Transform": {
      "translation": [0.0, 0.0, 0.0],
      "rotation": [0.0, 0.0, 0.0, 1.0],
      "scale": [1.0, 1.0, 1.0]
    },
    "bevy_transform::components::global_transform::GlobalTransform": {
      "translation": [0.0, 0.0, 0.0],
      "rotation": [0.0, 0.0, 0.0, 1.0],
      "scale": [1.0, 1.0, 1.0]
    },
    "bevy_core::name::Name": {
      "hash": 15304472766893732223,
      "name": "MyEntity"
    }
  }
}

EXAMPLES:
# Get all component data for a specific entity
$ {{BIN_NAME}} list_entity 4294967355

# Use with entity ID from spawn command
$ {{BIN_NAME}} --managed --commands 'spawn {"bevy_core::name::Name": "Test"},list_entity 24680'

# Extract specific component data with jq
$ {{BIN_NAME}} list_entity 4294967355 | jq '.components."bevy_transform::components::transform::Transform"'

COMMON ERRORS:
❌ {{BIN_NAME}} list_entity 999999999999
   Error: Entity 999999999999 does not exist

✅ {{BIN_NAME}} list_entity 4294967355

❌ {{BIN_NAME}} list_entity MyEntity
   Error: Invalid entity ID format (must be u64 integer)

✅ {{BIN_NAME}} list_entity 24680

NOTES:
- Returns ACTUAL component data, not just component type names
- Different from 'list_entities' which shows all entities but only component types
- Different from 'get' which requires you to specify the component type
- Use 'list_entities' first to discover available entity IDs
- Entity IDs are u64 integers (e.g., 4294967355)
- Shows all serializable components on the entity

WORKFLOW EXAMPLE:
# Discover entities and inspect one in detail
$ {{BIN_NAME}} --managed --commands 'list_entities | head -20'
# Pick an entity ID from the output
$ {{BIN_NAME}} --managed --commands 'list_entity 4294967355'

# Debug entity hierarchy
$ {{BIN_NAME}} --managed --commands 'list_entity 24680 | jq ".components | keys"'

COMPARISON:
- list_entity <id>     - Shows ALL component data for ONE specific entity
- list_entities        - Shows ALL entities with their component type names (no data)
- get <id> <component> - Shows data for ONE component on ONE entity
- query <component>    - Shows entities that have specific component(s) with data

See also: list_entities, get, query